
version: 1
disable_existing_loggers: false

formatters:
  # Console formatter - clean and readable for humans with currency info
  console:
    format: '%(asctime)s %(name)-20s %(levelname)-8s %(message)s'
    datefmt: '%H:%M:%S'
  
  # JSON formatter - structured for automated analysis
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(levelname)s %(name)s %(message)s'
    datefmt: '%Y-%m-%dT%H:%M:%S'

  # Detailed formatter for debugging
  detailed:
    format: '%(asctime)s [%(levelname)s] %(name)s:%(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'

handlers:
  # Console output - clean and readable
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: console
    stream: ext://sys.stdout
  
  # File output - structured JSON for analysis
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: json
    filename: logs/pipeline_execution.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  # Error file - only errors and critical messages
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/pipeline_errors.log
    maxBytes: 5242880  # 5MB
    backupCount: 3
    encoding: utf8


loggers:
  # Main application logger
  __main__:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  # Orchestration module
  orchestration:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  # Features module
  features:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  # Data I/O module
  data_io:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  # Utils module
  utils:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  # Dask and distributed logging (reduce verbosity)
  distributed:
    level: WARNING
    handlers: [file]
    propagate: false
  
  dask:
    level: WARNING
    handlers: [file]
    propagate: false
  
  # Third-party libraries (reduce noise)
  urllib3:
    level: WARNING
    handlers: [file]
    propagate: false
  
  requests:
    level: WARNING
    handlers: [file]
    propagate: false
  
  # Tornado/WebSocket logging (disable noisy connection logs)
  tornado:
    level: ERROR
    handlers: [file]
    propagate: false
  
  tornado.application:
    level: ERROR
    handlers: [file]
    propagate: false
  
  tornado.websocket:
    level: ERROR
    handlers: [file]
    propagate: false
  
  # Bokeh server logging (disable WebSocket connection logs)
  bokeh:
    level: WARNING
    handlers: [file]
    propagate: false
  
  bokeh.server:
    level: WARNING
    handlers: [file]
    propagate: false

root:
  level: INFO
  handlers: [console, file, error_file]
